# Разложение на простые множители факториала числа n.

def main():
    a = input('Введите n: ')
    n = int(a)
    if n in [1, 2, 3]:                             # Показываем введенное число (ответ)
        print(n)
        return                                     # Задача имеет смысл с n = 4
    s = []                                         # Список натуральных чисел от 1 до n
    i = 1                                          # Значение индекса
    f = 1                                          # Инициализация переменной под n
    while i <= n:
        s.append(i)                                # Инициализация списка
        if i < n:
            b = i + 1                              # Индекс следующего числа списка
            f = f * b                              # Промежуточный результат умножения значений списка (в конце получится факториал)
        i+=1
    print(s)                                       # Список
    print(f)                                       # Факториал n
    decomp(f)

def decomp(f):
    simple_list = [2, 3, 5, 7, 11, 13, 17, 19]      # Почему работало с 4 между 3 и 5 ???????????
    multiplier = []                                 # Список простых чисел являющихся множителями
    answer = ""                                     # Строка ответа
    i = 0                                           # Обнуляем индекс списка простых чисел
    while 1:
        if f % simple_list[i] == 0:                 # Если число делится без остатка,
            multiplier.append(simple_list[i])       # добавляем его в список множителей
        else:
            i += 1                                  # Увеличиваем значения индекся на 1
            continue                                # Возвращаемся к началу цикла
        if f // simple_list[i] == 1:                # Последнее число выбираемое число из списка простых чисел
            break
        f = f // simple_list[i]                     # Делим остаток от значения фактариала на последний выбранный моножитель
    print(multiplier)                               # Печатаем список множителей
    i = 0                                           # Обнуляем значение индекса, работаем со списком множителей
    a = 1                                           # Инициализуем показатель степеней
    for j in multiplier:                            # Цикл, перебор занчений списка множителей
        if i == len(multiplier) - 2:                # Дошли до предпосленего члена, преместивщись далее выйдем за границу списка
            if multiplier[i] == multiplier[i + 1]:  # Проверяем последний и предпоследний обьект списка множителей на равенство
                a+=1                                # если равны увеличиваем показатель степени на 1
                answer = answer + "%s^%s * " % (j, a)
                break
            else:                                   # если не равны (стр.38)
                if a == 1:                          # и если показатель степени 1
                    answer = answer + "%s * %s" % (j, multiplier[i + 1])        # добавляем в ответ 2 последних множителя
                else:
                    answer = answer + "%s^%s * %s" % (j, a, multiplier[i + 1])  # добавляем в ответ предпоследний множитель, показатель и последний множитель
                break                               # Выходим из обхода списка множителей
        if j == multiplier[i + 1]:                  # Если выбранный множитель равен следующему
            a += 1                                  # показатель степени увеличиваем на 1
            i += 1                                  # значение индекса увеличиваем на 1
        else:                                       # Если выбранный множетель не равен следующему (стр.49)
            i += 1                                  # значение индекса увеличиваем на 1
            if a == 1:                              # Если показатель степения равен 1
                answer = answer + "%s * " % (j)     # в ответ добавляем только множитель без показателья степени
            else:                                   # Если показатель степения  не равен 1
                answer = answer + "%s^%s * " % (j, a)   # В ответ добавляем множитель и показатель степени
            a = 1                                   # Показатель степени приравниваем к 1
    print(answer)

if __name__ == '__main__':
    main()
